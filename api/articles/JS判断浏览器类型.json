{"title":"JS判断浏览器类型总结","uid":"da5ae32f197a713b14ae5cac1efd5d4a","slug":"JS判断浏览器类型","date":"2018-05-13T12:13:15.000Z","updated":"2021-05-14T06:02:49.886Z","comments":true,"path":"api/articles/JS判断浏览器类型.json","keywords":null,"cover":"/assets/browser.jpg","content":"<p>开发 APP 过程中，需要打包上线 APP。为了用户体验好，我们新增了一个静态下载页面。用户扫描二维码进入到我们的下载页面，但是很多情况是推送给客户，客户可能会在微信或者 QQ 中打开我们的下载页面，点击下载按钮时无法实现下载我们的 APP，所以需要对用户打开下载页面进行判断，下面就是我们需要的判断代码：</p>\n<h2 id=\"JS-获取浏览器信息\"><a href=\"#JS-获取浏览器信息\" class=\"headerlink\" title=\"JS 获取浏览器信息\"></a>JS 获取浏览器信息</h2><p>浏览器代码名称：navigator.appCodeName<br>浏览器名称：navigator.appName<br>浏览器版本号：navigator.appVersion<br>对 Java 的支持：navigator.javaEnabled()<br>MIME 类型（数组）：navigator.mimeTypes<br>系统平台：navigator.platform<br>插件（数组）：navigator.plugins<br>用户代理：navigator.userAgent</p>\n<span id=\"more\"></span>\n\n<h2 id=\"JS-判断是否是移动端（Mobile）、ipad、iphone、微信、QQ-等\"><a href=\"#JS-判断是否是移动端（Mobile）、ipad、iphone、微信、QQ-等\" class=\"headerlink\" title=\"JS 判断是否是移动端（Mobile）、ipad、iphone、微信、QQ 等\"></a>JS 判断是否是移动端（Mobile）、ipad、iphone、微信、QQ 等</h2><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">var browser &#x3D; &#123;\n  versions: (function () &#123;\n    var u &#x3D; navigator.userAgent,\n      app &#x3D; navigator.appVersion\n    return &#123;\n      trident: u.indexOf(&#39;Trident&#39;) &gt; -1, &#x2F;&#x2F;IE内核\n      presto: u.indexOf(&#39;Presto&#39;) &gt; -1, &#x2F;&#x2F;opera内核\n      webKit: u.indexOf(&#39;AppleWebKit&#39;) &gt; -1, &#x2F;&#x2F;苹果、谷歌内核\n      gecko: u.indexOf(&#39;Gecko&#39;) &gt; -1 &amp;&amp; u.indexOf(&#39;KHTML&#39;) &#x3D;&#x3D; -1, &#x2F;&#x2F;火狐内核\n      mobile: !!u.match(&#x2F;AppleWebKit.*Mobile.*&#x2F;), &#x2F;&#x2F;是否为移动终端\n      ios: !!u.match(&#x2F;\\(i[^;]+;( U;)? CPU.+Mac OS X&#x2F;), &#x2F;&#x2F;ios终端\n      android: u.indexOf(&#39;Android&#39;) &gt; -1 || u.indexOf(&#39;Linux&#39;) &gt; -1, &#x2F;&#x2F;android终端或者uc浏览器\n      iPhone: u.indexOf(&#39;iPhone&#39;) &gt; -1, &#x2F;&#x2F;是否为iPhone或者QQHD浏览器\n      iPad: u.indexOf(&#39;iPad&#39;) &gt; -1, &#x2F;&#x2F;是否iPad\n      wp: u.toLowerCase().indexOf(&#39;windows phone&#39;) &gt; -1, &#x2F;&#x2F;是否为wp手机\n      webApp: u.indexOf(&#39;Safari&#39;) &#x3D;&#x3D; -1, &#x2F;&#x2F;是否web应该程序，没有头部与底部\n      weixin: u.indexOf(&#39;MicroMessenger&#39;) &gt; -1, &#x2F;&#x2F;是否微信\n      qq: u.match(&#x2F;\\sQQ&#x2F;i) &#x3D;&#x3D; &#39; qq&#39;, &#x2F;&#x2F;是否QQ\n    &#125;\n  &#125;)(),\n  language: (navigator.browserLanguage || navigator.language).toLowerCase(),\n&#125;\n\n&#x2F;&#x2F;判断是否IE内核\nif (browser.versions.trident) &#123;\n  alert(&#39;is IE&#39;)\n&#125;\n&#x2F;&#x2F;判断是否webKit内核\nif (browser.versions.webKit) &#123;\n  alert(&#39;is webKit&#39;)\n&#125;\n&#x2F;&#x2F;判断是否移动端\nif (browser.versions.mobile || browser.versions.android || browser.versions.ios) &#123;\n  alert(&#39;移动端&#39;)\n&#125;</code></pre>\n\n<h2 id=\"JS-判断浏览器和手机类型汇总\"><a href=\"#JS-判断浏览器和手机类型汇总\" class=\"headerlink\" title=\"JS 判断浏览器和手机类型汇总\"></a>JS 判断浏览器和手机类型汇总</h2><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">(function getUA(window) &#123;\n    var ua     &#x3D; navigator.userAgent.toLowerCase();\n    var ieMode &#x3D; document.documentMode,\n        isIE   &#x3D; !!window.ActiveXObject,\n        isIE6  &#x3D; isIE &amp;&amp; !window.XMLHttpRequest;\n    var isEdge&#x3D;&#x2F;edge&#x2F;i.test(ua),\n        isOpera&#x3D;&#x2F;opr&#x2F;i.test(ua);\n    var isIpad &#x3D; &#x2F;(ipad).*os\\s([\\d_]+)&#x2F;i.test(ua);\n\n    window.UA &#x3D; &#123;\n        isMobile    : &#x2F;applewebkit.*mobile.*&#x2F;.test(ua) || &#x2F;applewebKit&#x2F;.test(ua),                           &#x2F;&#x2F;是否为移动端\n        isMac       : &#x2F;mac os x&#x2F;.test(ua),                                                                  &#x2F;&#x2F;苹果电脑\n        isAndroid   : ua.indexOf(&#39;android&#39;) &gt; -1 || ua.indexOf(&#39;linux&#39;) &gt; -1,                               &#x2F;&#x2F;android终端\n        isIPhone    : !isIpad &amp;&amp; &#x2F;(iphone\\sos)\\s([\\d_]+)&#x2F;i.test(ua),                                        &#x2F;&#x2F;iphone\n        isIPad      : isIpad,                                                                               &#x2F;&#x2F;ipad\n        isIos       : isIpad || &#x2F;(iphone\\sos)\\s([\\d_]+)&#x2F;i.test(ua),                                         &#x2F;&#x2F;ios系统,包括ipad和iphone；(不包含iPod touch)\n        isWeiXin    : &#x2F;micromessenger&#x2F;i.test(ua),                                                           &#x2F;&#x2F;weixin\n        isUC        : ua.indexOf(&#39;ucbrowser&#39;) &gt; -1,                                                         &#x2F;&#x2F;UC\n        isUC_Webkit : &#x2F;uc\\sapplewebkit\\&#x2F;([\\d.]+)&#x2F;i.test(ua),                                                &#x2F;&#x2F;isUC_Webkit\n        isUC_Proxy  : &#x2F;(ucweb)(\\d.+?(?&#x3D;\\&#x2F;))&#x2F;i.test(ua),                                                     &#x2F;&#x2F;isUC_Proxy\n\n        isWeibo     : &#x2F;weibo&#x2F;i.test(ua),                                                                    &#x2F;&#x2F;在新浪微博客户端打开\n        isQQ        : &#x2F;(qq)\\&#x2F;&#x2F;i.test(ua),                                                                   &#x2F;&#x2F;在QQ\n        isChrome    : (&#x2F;chrome\\&#x2F;([\\d.]+)&#x2F;.test(ua) || &#x2F;crios\\&#x2F;([\\d.]+)&#x2F;.test(ua))&amp;&amp; !isEdge &amp;&amp; !isOpera,    &#x2F;&#x2F;Chrome\n        isMozilla   : ua.indexOf(&#39;gecko&#39;) &gt; -1 &amp;&amp; ua.indexOf(&#39;khtml&#39;) &#x3D;&#x3D; -1,                                &#x2F;&#x2F;火狐内核\n        isWebkit    : &#x2F;applewebkit&#x2F;i.test(ua),                                                              &#x2F;&#x2F;苹果，谷歌内核\n        isOpera     : isOpera,                                                                              &#x2F;&#x2F;opera浏览器，webkit\n        isSafari    : &#x2F;safari&#x2F;i.test(ua) &amp;&amp; (!&#x2F;chrome&#x2F;i.test(ua)),                                          &#x2F;&#x2F;苹果浏览器\n        isBlackberry: &#x2F;(blackberry).*version\\&#x2F;([\\d.]+)&#x2F;i.test(ua),                                          &#x2F;&#x2F;blackberry\n\n\n        isEdge      : isEdge,                                                                               &#x2F;&#x2F;edge\n        isIE        : isIE,                                                                                 &#x2F;&#x2F;IE\n        isIE6       : isIE6,                                                                                &#x2F;&#x2F;IE6\n        isIE7       : isIE &amp;&amp; !isIE6 &amp;&amp; !ieMode || ieMode &#x3D;&#x3D; 7,                                             &#x2F;&#x2F;IE7\n        isIE8       : isIE &amp;&amp; ieMode &#x3D;&#x3D; 8,                                                                  &#x2F;&#x2F;IE8\n        isIE9       : isIE &amp;&amp; ieMode &#x3D;&#x3D; 9,                                                                  &#x2F;&#x2F;IE9\n        isIE10      : isIE &amp;&amp; ieMode &#x3D;&#x3D; 10,                                                                 &#x2F;&#x2F;IE10\n\n        is360mse    : &#x2F;360 aphone browser|qhbrowser&#x2F;i.test(ua),                                             &#x2F;&#x2F;360手机浏览器\n\n        isHorizontal: window.orientation &#x3D;&#x3D; 90 || window.orientation &#x3D;&#x3D; -90,                                &#x2F;&#x2F;是否横屏\n        isVertical  : window.orientation &#x3D;&#x3D; 0 || window.orientation &#x3D;&#x3D; 180                                  &#x2F;&#x2F;是否竖屏\n    &#125;\n&#125;)(window);\n\neq：\nif(UA.isWeiXin)&#123;\n    console.log(&quot;现在是微信打开&quot;);\n&#125;else  if(UA.isChrome)&#123;\n    console.log(&quot;现在是Chrome打开&quot;);\n&#125;else&#123;\n    console.log(&quot;other&quot;);\n&#125;</code></pre>\n\n<h2 id=\"JS-判断客户端是否是-iOS-或者-Android-手机移动端-跳转到不同页面\"><a href=\"#JS-判断客户端是否是-iOS-或者-Android-手机移动端-跳转到不同页面\" class=\"headerlink\" title=\"JS 判断客户端是否是 iOS 或者 Android 手机移动端,跳转到不同页面\"></a>JS 判断客户端是否是 iOS 或者 Android 手机移动端,跳转到不同页面</h2><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">if (&#x2F;(iPhone|iPad|iPod|iOS)&#x2F;i.test(navigator.userAgent)) &#123;\n  &#x2F;&#x2F;alert(navigator.userAgent);\n  window.location.href &#x3D; &#39;iPhone.html&#39;\n&#125; else if (&#x2F;(Android)&#x2F;i.test(navigator.userAgent)) &#123;\n  &#x2F;&#x2F;alert(navigator.userAgent);\n  window.location.href &#x3D; &#39;Android.html&#39;\n&#125; else &#123;\n  window.location.href &#x3D; &#39;pc.html&#39;\n&#125;</code></pre>\n\n<h2 id=\"JS-微信客户端判断\"><a href=\"#JS-微信客户端判断\" class=\"headerlink\" title=\"JS 微信客户端判断\"></a>JS 微信客户端判断</h2><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">var ua &#x3D; navigator.userAgent.toLowerCase()\nvar isWeixin &#x3D; ua.indexOf(&#39;micromessenger&#39;) !&#x3D; -1\nvar isAndroid &#x3D; ua.indexOf(&#39;android&#39;) !&#x3D; -1\nvar isIos &#x3D; ua.indexOf(&#39;iphone&#39;) !&#x3D; -1 || ua.indexOf(&#39;ipad&#39;) !&#x3D; -1\nif (!isWeixin) &#123;\n  document.head.innerHTML &#x3D;\n    &#39;&lt;title&gt;抱歉，出错了&lt;&#x2F;title&gt;&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, user-scalable&#x3D;0&quot;&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;res.wx.qq.com&#x2F;open&#x2F;libs&#x2F;weui&#x2F;0.4.1&#x2F;weui.css&quot;&gt;&#39;\n  document.body.innerHTML &#x3D;\n    &#39;&lt;div class&#x3D;&quot;weui_msg&quot;&gt;&lt;div class&#x3D;&quot;weui_icon_area&quot;&gt;&lt;i class&#x3D;&quot;weui_icon_info weui_icon_msg&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;weui_text_area&quot;&gt;&lt;h4 class&#x3D;&quot;weui_msg_title&quot;&gt;请在微信客户端打开链接&lt;&#x2F;h4&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&#39;\n&#125;</code></pre>\n","text":"开发 APP 过程中，需要打包上线 APP。为了用户体验好，我们新增了一个静态下载页面。用户扫描二维码进入到我们的下载页面，但是很多情况是推送给客户，客户可能会在微信或者 QQ 中打开我们的下载页面，点击下载按钮时无法实现下载我们的 APP，所以需要对用户打开下载页面进行判断，下...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"Browser","slug":"Browser","count":1,"path":"api/categories/Browser.json"}],"tags":[{"name":"Browser JS","slug":"Browser-JS","count":1,"path":"api/tags/Browser-JS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS-%E8%8E%B7%E5%8F%96%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">JS 获取浏览器信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF%E7%A7%BB%E5%8A%A8%E7%AB%AF%EF%BC%88Mobile%EF%BC%89%E3%80%81ipad%E3%80%81iphone%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81QQ-%E7%AD%89\"><span class=\"toc-text\">JS 判断是否是移动端（Mobile）、ipad、iphone、微信、QQ 等</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS-%E5%88%A4%E6%96%AD%E6%B5%8F%E8%A7%88%E5%99%A8%E5%92%8C%E6%89%8B%E6%9C%BA%E7%B1%BB%E5%9E%8B%E6%B1%87%E6%80%BB\"><span class=\"toc-text\">JS 判断浏览器和手机类型汇总</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS-%E5%88%A4%E6%96%AD%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%98%AF%E5%90%A6%E6%98%AF-iOS-%E6%88%96%E8%80%85-Android-%E6%89%8B%E6%9C%BA%E7%A7%BB%E5%8A%A8%E7%AB%AF-%E8%B7%B3%E8%BD%AC%E5%88%B0%E4%B8%8D%E5%90%8C%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">JS 判断客户端是否是 iOS 或者 Android 手机移动端,跳转到不同页面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS-%E5%BE%AE%E4%BF%A1%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">JS 微信客户端判断</span></a></li></ol>","author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Web Storage - HTML5本地存储","uid":"6c8c7b5d1ee2282dcd4144a2e2072c08","slug":"Web Storage - HTML5本地存储","date":"2018-06-06T02:11:34.000Z","updated":"2021-05-14T03:44:00.989Z","comments":true,"path":"api/articles/Web Storage - HTML5本地存储.json","keywords":null,"cover":"/assets/web-storage.jpg","text":"Web Storage 是 HTML5 引入的一个非常重要的功能，在前端开发中经常用到，可以在客户端本地存储数据，类似 HTML4 的 cookie，但可实现功能要比 cookie 强大的多，cookie 大小被限制在 4KB，Web Storage 官方建议为每个网站 5MB。...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Web Storage","slug":"Web-Storage","count":1,"path":"api/categories/Web-Storage.json"}],"tags":[{"name":"Web Storage","slug":"Web-Storage","count":1,"path":"api/tags/Web-Storage.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Ajax解析","uid":"58c3765b4ca8e3bdf0eac83cf4cb3ffa","slug":"Ajax解析","date":"2018-05-11T11:56:04.000Z","updated":"2021-05-14T06:03:43.524Z","comments":true,"path":"api/articles/Ajax解析.json","keywords":null,"cover":"/assets/ajax.jpg","text":"AJAX 即“Asynchronous JavaScript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。Ajax 不是一种新的编程语言，而是使用现有标准的新方法。AJAX 可以在不重新加载整个页面的情况下，与服务器交换数...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"Ajax","slug":"Ajax","count":1,"path":"api/categories/Ajax.json"}],"tags":[{"name":"Ajax","slug":"Ajax","count":1,"path":"api/tags/Ajax.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}