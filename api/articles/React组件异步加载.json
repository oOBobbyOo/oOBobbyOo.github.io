{"title":"React组件异步加载","uid":"fba191276a9852d7cc27748cdc57a493","slug":"React组件异步加载","date":"2019-08-13T15:22:45.000Z","updated":"2021-05-14T10:42:24.451Z","comments":true,"path":"api/articles/React组件异步加载.json","keywords":null,"cover":"/assets/react.jpg","content":"<h1 id=\"使用-react-loadable-快速完成异步组件的编写\"><a href=\"#使用-react-loadable-快速完成异步组件的编写\" class=\"headerlink\" title=\"使用 react-loadable 快速完成异步组件的编写\"></a>使用 react-loadable 快速完成异步组件的编写</h1><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">npm install react-loadable --save\n\n&#x2F;&#x2F; eq:\nimport Loadable from &#39;react-loadable&#39;;\nimport Loading from &#39;.&#x2F;my-loading-component&#39;;\nconst LoadableComponent &#x3D; Loadable(&#123;\n  loader: () &#x3D;&gt; import(&#39;.&#x2F;my-component&#39;),\n  loading: Loading,\n&#125;);\nexport default class App extends React.Component &#123;\n  render() &#123;\n    return &lt;LoadableComponent&#x2F;&gt;;\n  &#125;\n&#125;</code></pre>\n\n<span id=\"more\"></span>\n\n<h1 id=\"自定义异步组件-create-syncComponent-js\"><a href=\"#自定义异步组件-create-syncComponent-js\" class=\"headerlink\" title=\"自定义异步组件 create syncComponent.js\"></a>自定义异步组件 create syncComponent.js</h1><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">import React from &#39;react&#39;\n\nexport default (loadComponent) &#x3D;&gt;\n  class AsyncComponent extends React.Component &#123;\n    state &#x3D; &#123;\n      Component: null,\n    &#125;\n    async componentDidMount() &#123;\n      if (this.state.Component !&#x3D;&#x3D; null) return\n\n      try &#123;\n        const &#123; default: Component &#125; &#x3D; await loadComponent()\n        this.setState(&#123; Component &#125;)\n      &#125; catch (err) &#123;\n        console.error(&#39;Cannot load component in &lt;AsyncComponent &#x2F;&gt;&#39;)\n        throw err\n      &#125;\n    &#125;\n\n    render() &#123;\n      const &#123; Component &#125; &#x3D; this.state\n      return Component ? &lt;Component &#123;...this.props&#125; &#x2F;&gt; : null\n    &#125;\n  &#125;</code></pre>\n\n<p>使用：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">import asyncComponent from &#39;@&#x2F;components&#x2F;AsyncComponent&#39;\nconst _import_views &#x3D; (file) &#x3D;&gt; asyncComponent(() &#x3D;&gt; import(&#96;@&#x2F;views&#x2F;$&#123;file&#125;&#96;))\nconst Home &#x3D; _import_views(&#39;Home&#39;)</code></pre>\n","text":"使用 react-loadable 快速完成异步组件的编写npm install react-loadable --save &#x2F;&#x2F; eq: import Loadable from &#39;react-loadable&#39;; import Loadin...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":2,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":2,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-react-loadable-%E5%BF%AB%E9%80%9F%E5%AE%8C%E6%88%90%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6%E7%9A%84%E7%BC%96%E5%86%99\"><span class=\"toc-text\">使用 react-loadable 快速完成异步组件的编写</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6-create-syncComponent-js\"><span class=\"toc-text\">自定义异步组件 create syncComponent.js</span></a></li></ol>","author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"理解JS继承方式","uid":"c2607e9298e419e91fd4a6508ed0ae1d","slug":"理解JS继承方式","date":"2019-09-20T14:05:28.000Z","updated":"2021-05-14T10:41:05.732Z","comments":true,"path":"api/articles/理解JS继承方式.json","keywords":null,"cover":"/assets/js2.jpg","text":"1.原型继承模式&#x2F;&#x2F; 父类 function Parent(name, age) &#123; this.name &#x3D; name; this.age &#x3D; age; this.foods &#x3D; [&#39;苹果&#39;，&#39;香...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"JS","slug":"JS","count":4,"path":"api/categories/JS.json"}],"tags":[{"name":"JS","slug":"JS","count":3,"path":"api/tags/JS.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"详解JS遍历","uid":"9f17109abe732a77d87a2b0d4189145c","slug":"详解JS遍历","date":"2019-07-20T14:19:44.000Z","updated":"2021-05-14T10:40:31.703Z","comments":true,"path":"api/articles/详解JS遍历.json","keywords":null,"cover":"/assets/js.jpg","text":"遍历数组或对象是一名程序员的基本素养之一，然而遍历却不是一件简单的事，优秀的程序员知道怎么去选择合适的遍历方法，优化遍历效率。本篇将带你走进 JavaScript 遍历的世界，享受分析 JS 循环的快感。本篇所有代码都可以直接运行，希望您通读本篇后，不止是浏览， 最好是亲手去实践...","link":"","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"JS","slug":"JS","count":4,"path":"api/categories/JS.json"}],"tags":[{"name":"JS","slug":"JS","count":3,"path":"api/tags/JS.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}