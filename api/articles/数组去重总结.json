{"title":"数组去重总结","uid":"4c337e9614c51b00a241324241640e12","slug":"数组去重总结","date":"2019-10-04T14:05:14.000Z","updated":"2021-05-14T10:48:52.000Z","comments":true,"path":"api/articles/数组去重总结.json","keywords":null,"cover":"/assets/array.jpg","content":"<h1 id=\"数组去重总结\"><a href=\"#数组去重总结\" class=\"headerlink\" title=\"数组去重总结\"></a>数组去重总结</h1><p>一：利用 ES6 Set 去重</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  return Array.from(new set(arr))\n&#125;</code></pre>\n\n<p>二：利用 for 嵌套 for，然后 splice 去重</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;\n    for (var j &#x3D; i + 1; j &lt; arr.length; j++) &#123;\n      if (arr[i] &#x3D;&#x3D; arr[j]) &#123;\n        arr.splice(j, 1)\n        j--\n      &#125;\n    &#125;\n  &#125;\n  return arr\n&#125;</code></pre>\n\n<p>三、利用 indexOf 去重</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  if (!Array.isArray(arr)) &#123;\n    console.log(&#39;type error!&#39;)\n    return false\n  &#125;\n  var array &#x3D; []\n  for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;\n    if (array.indexOf(arr[i]) &#x3D;&#x3D;&#x3D; -1) &#123;\n      array.push(arr[i])\n    &#125;\n  &#125;\n  return array\n&#125;</code></pre>\n\n<p>四、利用 sort()</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  if (!Array.isArray(arr)) &#123;\n    console.log(&#39;type error!&#39;)\n    return false\n  &#125;\n  var array &#x3D; [arr[0]]\n  for (var i &#x3D; 1; i &lt; arr.length; i++) &#123;\n    if (arr[i] !&#x3D;&#x3D; arr[i - 1]) &#123;\n      array.push(arr[i])\n    &#125;\n  &#125;\n  return array\n&#125;</code></pre>\n\n<p>五、利用 includes</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  if (!Array.isArray(arr)) &#123;\n    console.log(&#39;type error!&#39;)\n    return false\n  &#125;\n  var array &#x3D; []\n  for (var i &#x3D; 0; i &lt; arr.length; i++) &#123;\n    if (!array.includes(arr[i])) &#123;\n      array.push(arr[i])\n    &#125;\n  &#125;\n  return array\n&#125;</code></pre>\n\n<p>六、利用 filter</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  return arr.filter(function (item, index, arr) &#123;\n    &#x2F;&#x2F;当前元素，在原始数组中的第一个索引&#x3D;&#x3D;当前索引值，否则返回当前元素\n    return arr.indexOf(item, 0) &#x3D;&#x3D;&#x3D; index\n  &#125;)\n&#125;</code></pre>\n\n<p>七、利用递归去重</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  var array &#x3D; arr\n  var len &#x3D; array.length\n\n  array.sort(function (a, b) &#123;\n    &#x2F;&#x2F;排序后更加方便去重\n    return a - b\n  &#125;)\n\n  function loop(index) &#123;\n    if (index &gt;&#x3D; 1) &#123;\n      if (array[index] &#x3D;&#x3D;&#x3D; array[index - 1]) &#123;\n        array.splice(index, 1)\n      &#125;\n      loop(index - 1) &#x2F;&#x2F;递归loop，然后数组去重\n    &#125;\n  &#125;\n  loop(len - 1)\n  return array\n&#125;</code></pre>\n\n<p>八、利用 Map 数据结构去重</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function arrayNonRepeatfy(arr) &#123;\n  let map &#x3D; new Map()\n  let array &#x3D; new Array() &#x2F;&#x2F; 数组用于返回结果\n  for (let i &#x3D; 0; i &lt; arr.length; i++) &#123;\n    if (map.has(arr[i])) &#123;\n      &#x2F;&#x2F; 如果有该key值\n      map.set(arr[i], true)\n    &#125; else &#123;\n      map.set(arr[i], false) &#x2F;&#x2F; 如果没有该key值\n      array.push(arr[i])\n    &#125;\n  &#125;\n  return array\n&#125;</code></pre>\n\n<p>九、利用 reduce+includes</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function unique(arr) &#123;\n  return arr.reduce((prev, cur) &#x3D;&gt; (prev.includes(cur) ? prev : [...prev, cur]), [])\n&#125;</code></pre>\n","text":"数组去重总结一：利用 ES6 Set 去重 function unique(arr) &#123; return Array.from(new set(arr)) &#125; 二：利用 for 嵌套 for，然后 splice 去重 function unique(arr) &...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"JS","slug":"JS","count":4,"path":"api/categories/JS.json"}],"tags":[{"name":"array","slug":"array","count":1,"path":"api/tags/array.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">数组去重总结</span></a></li></ol>","author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Gulp 配置教程","uid":"bcecceec14c0a7497b90500561edea6c","slug":"Gulp配置教程","date":"2019-10-25T14:28:46.000Z","updated":"2021-05-14T10:54:40.000Z","comments":true,"path":"api/articles/Gulp配置教程.json","keywords":null,"cover":"/assets/gulp.jpg","text":"Gulp 是前端开发过程中对代码进行构建的工具，是自动化项目的构建利器；她不仅能对网站资源进行优化，而且在开发过程中很多重复的任务能够使用正确的工具自动完成；使用她，我们不仅可以很愉快的编写代码，而且大大提高我们的工作效率。Gulp 基于 Node.js 的前端构建工具，通过 G...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"Gulp","slug":"Gulp","count":1,"path":"api/categories/Gulp.json"}],"tags":[{"name":"Gulp","slug":"Gulp","count":1,"path":"api/tags/Gulp.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"理解JS继承方式","uid":"c2607e9298e419e91fd4a6508ed0ae1d","slug":"理解JS继承方式","date":"2019-09-20T14:05:28.000Z","updated":"2021-05-14T10:41:04.000Z","comments":true,"path":"api/articles/理解JS继承方式.json","keywords":null,"cover":"/assets/js2.jpg","text":"1.原型继承模式&#x2F;&#x2F; 父类 function Parent(name, age) &#123; this.name &#x3D; name; this.age &#x3D; age; this.foods &#x3D; [&#39;苹果&#39;，&#39;香...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"JS","slug":"JS","count":4,"path":"api/categories/JS.json"}],"tags":[{"name":"JS","slug":"JS","count":3,"path":"api/tags/JS.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}