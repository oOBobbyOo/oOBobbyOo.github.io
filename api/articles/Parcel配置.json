{"title":"Parcel 入门实践","uid":"1da5fd0891b1fb5f2f44e192cd8c68c6","slug":"Parcel配置","date":"2018-12-25T13:50:36.000Z","updated":"2021-05-14T06:01:00.106Z","comments":true,"path":"api/articles/Parcel配置.json","keywords":null,"cover":"/assets/parcel.png","content":"<p>Webpack 是目前最多人使用的前端打包工具，但 webpack 功能强大，导致配置比较复杂（各种对应转换 loader，各种插件等），如果配置不合理还可能导致打包速度过慢。最近出现了一款新的打包工具 Parcel，受关注程度不亚于 Webpack。Parcel 是一个 Web 应用程序 打包器(bundler)，与以往的开发人员使用的打包器有所不同。它利用多核处理提供极快的性能，并且你不需要进行任何配置。</p>\n<p>英文：<a href=\"https://en.parceljs.org/\">https://en.parceljs.org/</a><br>中文：<a href=\"http://www.parceljs.io/\">http://www.parceljs.io/</a><br>Github: <a href=\"https://github.com/parcel-bundler/parcel\">https://github.com/parcel-bundler/parcel</a></p>\n<span id=\"more\"></span>\n\n<h2 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h2><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">&#x2F;&#x2F;Yarn:\nyarn global add parcel-bundler\n\n&#x2F;&#x2F;npm\nnpm install -g parcel-bundler</code></pre>\n\n<h2 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h2><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">&#x2F;&#x2F;创建目录\nmkdir parcel\n\n&#x2F;&#x2F;创建package.json 文件\ncd parcel\nyarn init -y or npm init -y\n\n&#x2F;&#x2F;创建index.html\n&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;\n    &lt;title&gt;parcel&lt;&#x2F;title&gt;\n    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;css&#x2F;style.css&quot;&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\n        &lt;p&gt;hello Bobby&lt;&#x2F;p&gt;\n    &lt;&#x2F;h1&gt;\n\n    &lt;script src&#x3D;&quot;.&#x2F;js&#x2F;index.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n\n&#x2F;&#x2F;创建index.js\nconsole.log(&#39;test&#39;);\n\n&#x2F;&#x2F;创建style.css\nh1 &#123;\n\tcolor: #fff;\n\tfont-size: 50px;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-pack: center;\n\t-ms-flex-pack: center;\n\tjustify-content: center;\n\t-webkit-box-align: center;\n\t-ms-flex-align: center;\n\talign-items: center;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: url(..&#x2F;images&#x2F;brand.jpg) no-repeat center;\n&#125;</code></pre>\n\n<h2 id=\"运行编译命令\"><a href=\"#运行编译命令\" class=\"headerlink\" title=\"运行编译命令\"></a>运行编译命令</h2><img src=\"/assets/parcel/parcel-run.png\" alt=\"parcel\" style=\"margin: 0 0 25px;\">\n\n<h2 id=\"在浏览器中打开-http-localhost-1234\"><a href=\"#在浏览器中打开-http-localhost-1234\" class=\"headerlink\" title=\"在浏览器中打开 http://localhost:1234/\"></a>在浏览器中打开 <a href=\"http://localhost:1234/\">http://localhost:1234/</a></h2><img src=\"/assets/parcel/parcel-test.png\" alt=\"parcel\" style=\"margin: 0 0 25px;\">\n\n<p>除了纯 CSS ，还支持其他编译成 CSS 语言，如 LESS ，SASS 和 Stylus ，并以相同的方式工作<br>SCSS 编译需要 node-sass 模块。可以用 npm 来安装它：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">npm install node-sass\n\n&#x2F;&#x2F;在 JavaScript 文件中导入 SCSS 文件\nimport &#39;..&#x2F;js&#x2F;custom.scss&#39;</code></pre>\n\n<p>尽管许多 打包器(bundler) 都要求你安装和配置插件来转换资源，Parcel 内置许多长江的转换和转译器，让你开箱即用。你可以使用 Babel 转换 JavaScript，CSS 使用 PostCSS ，HTML 使用 PostHTML 。当在模块中找到配置文件（例如 .babelrc ，.postcssrc ）时， Parcel 会自动运行这些转换。</p>\n<h3 id=\"Babel\"><a href=\"#Babel\" class=\"headerlink\" title=\"Babel\"></a>Babel</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">npm insatll babel-preset-env\n\n&#x2F;&#x2F;创建一个 .babelrc 文件\n&#123;\n  &quot;presets&quot;: [&quot;env&quot;]\n&#125;</code></pre>\n\n<h3 id=\"PostCSS\"><a href=\"#PostCSS\" class=\"headerlink\" title=\"PostCSS\"></a>PostCSS</h3><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">npm install postcss-modules autoprefixer\n\n&#x2F;&#x2F;创建一个 .postcssrc 文件\n&#123;\n  &quot;modules&quot;: true,\n  &quot;plugins&quot;: &#123;\n    &quot;autoprefixer&quot;: &#123;\n      &quot;grid&quot;: true\n    &#125;\n  &#125;\n&#125;</code></pre>\n\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><img src=\"/assets/parcel/parcel-dir.png\" alt=\"parcel\" style=\"margin: 0 0 25px;\">\n\n<h2 id=\"Parcel-优点\"><a href=\"#Parcel-优点\" class=\"headerlink\" title=\"Parcel 优点\"></a>Parcel 优点</h2><ul>\n<li>快速打包 - 多核编译，以及文件系统缓存，即使在重新启动之后也能快速重新构建。</li>\n<li>支持 JS，CSS，HTML，文件资源等- 不需要安装任何插件。</li>\n<li>在需要的时候自动使用 Babel，PostCSS 和 PostHTML 自动转换模块 - 甚至是 node_modules。</li>\n<li>零配置代码拆分，使用动态 import 语句分割。</li>\n<li>内置支持模块热替换</li>\n<li>友好的错误记录体验，语法突出显示的代码帧有助于查明问题。</li>\n</ul>\n<h2 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h2><table>\n<thead>\n<tr>\n<th align=\"center\">打包器</th>\n<th align=\"center\">时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">browserify</td>\n<td align=\"center\">22.98s</td>\n</tr>\n<tr>\n<td align=\"center\">webpack</td>\n<td align=\"center\">20.71s</td>\n</tr>\n<tr>\n<td align=\"center\">parcel</td>\n<td align=\"center\">9.98s</td>\n</tr>\n<tr>\n<td align=\"center\">parcel - with cache</td>\n<td align=\"center\">2.64s</td>\n</tr>\n</tbody></table>\n","text":"Webpack 是目前最多人使用的前端打包工具，但 webpack 功能强大，导致配置比较复杂（各种对应转换 loader，各种插件等），如果配置不合理还可能导致打包速度过慢。最近出现了一款新的打包工具 Parcel，受关注程度不亚于 Webpack。Parcel 是一个 Web...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Parcel","slug":"Parcel","count":1,"path":"api/categories/Parcel.json"}],"tags":[{"name":"Parcel","slug":"Parcel","count":1,"path":"api/tags/Parcel.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%B1%80%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">全局安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">初始化项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E7%BC%96%E8%AF%91%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">运行编译命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E6%89%93%E5%BC%80-http-localhost-1234\"><span class=\"toc-text\">在浏览器中打开 http:&#x2F;&#x2F;localhost:1234&#x2F;</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Babel\"><span class=\"toc-text\">Babel</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PostCSS\"><span class=\"toc-text\">PostCSS</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">目录结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Parcel-%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">Parcel 优点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">比较</span></a></li></ol>","author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"移动端 web 开发技巧","uid":"3ec09ca678cbb84e2a1f5d3e2f3e164f","slug":"移动端 web 开发技巧","date":"2019-04-20T11:46:18.000Z","updated":"2021-05-14T03:41:25.136Z","comments":true,"path":"api/articles/移动端 web 开发技巧.json","keywords":null,"cover":"/assets/h5.jpg","text":"在开发移动端的 Web 项目时踩了很多的坑，感觉有必要把它们记录下来，分享给即将踏入移动端 Web 开发大门的新人们。 META 相关1. 添加到主屏后的标题（IOS）&lt;meta name&#x3D;&quot;apple-mobile-web-app-title&quot...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Mobile","slug":"Mobile","count":1,"path":"api/categories/Mobile.json"}],"tags":[{"name":"Mobile","slug":"Mobile","count":1,"path":"api/tags/Mobile.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"理解JS继承方式","uid":"c2607e9298e419e91fd4a6508ed0ae1d","slug":"理解JS继承方式","date":"2018-09-20T14:05:28.000Z","updated":"2021-05-14T03:41:05.566Z","comments":true,"path":"api/articles/理解JS继承方式.json","keywords":null,"cover":"/assets/js2.jpg","text":"1.原型继承模式&#x2F;&#x2F; 父类 function Parent(name, age) &#123; this.name &#x3D; name; this.age &#x3D; age; this.foods &#x3D; [&#39;苹果&#39;，&#39;香...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"JS","slug":"JS","count":3,"path":"api/categories/JS.json"}],"tags":[{"name":"JS","slug":"JS","count":3,"path":"api/tags/JS.json"}],"author":{"name":"Bobby's Blog","slug":"blog-author","avatar":"/assets/user/bobby.jpg","link":"/","description":"欢迎来到我的博客 <br /> (σﾟ∀ﾟ)σ..:*☆哎哟不错哦","socials":{"github":"https://github.com/oOBobbyOo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}